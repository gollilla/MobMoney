<?phpnamespace mobmoney;use pocketmine\Server;use pocketmine\Player;use pocketmine\plugin\PluginBase;use pocketmine\event\entity\EntityDeathEvent;use pocketmine\event\entity\EntityDamageEvent;use pocketmine\event\entity\EntityDamageByEntityEvent;use pocketmine\event\Listener;use pocketmine\utils\TextFormat;use pocketmine\utils\Config;class mobmoney extends PluginBase implements Listener{ public function onEnable(){     $this->getServer()->getPluginManager()->registerEvents($this, $this);     if(!file_exists($this->getDataFolder())){              mkdir($this->getDataFolder(), 0744, true);     }     $this->config = new Config($this->getDataFolder() ."config.yml", Config::YAML,       array(              "倒した時のお金" => "200"             ));     $this->config->save();          if($this->getServer()->getPluginManager()->getPlugin("EconomyAPI") !== null){           $this->api = $this->getServer()->getPluginManager()->getPlugin("EconomyAPI");           $this->getLogger()->info(TextFormat::GREEN."EconomyAPIを読み込みました");     }else{           $this->getLogger()->warning("EconomyAPIは見つかりませんでした");           $this->getServer()->shutdown();     }  }   public function onKill(EntityDeathEvent $ev){      $entity = $ev->getEntity();    if($entity->getLastDamageCause() instanceof EntityDamageByEntityEvent){       $killer = $entity->getLastDamageCause()->getDamager();                  if($killer instanceof Player){        echo $entity;                      if(strpos($entity,"Zombie") !== false){                             $this->api->addMoney($killer, $this->config->get("倒した時のお金"));              $killer->sendMessage("[§aMM§f] §6$".$this->config->get("倒した時のお金")."§b手に入れました");          }   }  } }}